---

# Load a variable file based on the OS type, or a default if not found.
- include_vars: "{{ item }}"
  with_first_found:
   - "{{ ansible_distribution }}.yml"
   - "{{ ansible_os_family }}.yml"
   - "default.yml"

- name: blow away default data directory
  shell: rm -Rf /usr/local/var/postgres;
  args:
    creates: "{{ postgresql_data_directory }}/postgres-dbinit.done"
  when: ansible_os_family == "Darwin"

- name: create the database
  shell: /usr/local/bin/initdb -U postgres -A trust --encoding=utf8 --locale=en_US /usr/local/var/postgres; touch /usr/local/var/postgres/postgres-dbinit.done;
  args:
    creates: /usr/local/var/postgres/postgres-dbinit.done
  when: ansible_os_family == "Darwin"

- name: Ensure the data directory exists
  become: true
  file:
    path: "{{postgresql_data_directory}}"
    owner: "{{ postgresql_service_user }}"
    group: "{{ postgresql_service_group }}"
    state: directory
    mode: 0700

- name: Ensure the conf directory exists
  become: true
  file:
    path: "{{postgresql_conf_directory}}"
    owner: "{{ postgresql_service_user }}"
    group: "{{ postgresql_service_group }}"
    state: directory
    mode: 0700

- name: configure pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_conf_directory }}/pg_hba.conf"
    owner: "{{ postgresql_service_user }}"
    group: "{{ postgresql_service_group }}"
    mode: 0640
    force: yes
    backup: yes
  become: true
  notify:
   - restart_postgresql_apt
   - restart_postgresql_darwin

- name: configure postgresql.conf
  template:
    src: postgresql.conf.j2
    dest: "{{ postgresql_conf_directory }}/postgresql.conf"
    force: yes
    backup: yes
    owner: "{{ postgresql_service_user }}"
    group: "{{ postgresql_service_group }}"
    mode: 0640
  become: true
  notify:
   - restart_postgresql_apt
   - restart_postgresql_darwin

- name: Start services at login
  file: src=/usr/local/opt/{{ item }}/homebrew.mxcl.{{ item }}.plist path=~/Library/LaunchAgents/homebrew.mxcl.{{ item }}.plist state=link force=yes

  when: ansible_os_family == "Darwin"
  with_items:
   - postgresql

- name: check if postgresql is loaded
  shell: launchctl list
  changed_when: False
  register: postgresql_loaded_result
  when: ansible_os_family == "Darwin"

- name: unload postgresql
  shell: launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
  when: ansible_os_family == "Darwin"

- name: load postgresql
  shell: launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
  when: ansible_os_family == "Darwin"

- pause: seconds=5
